{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./src/components/comments.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-title.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-date.js","webpack:///./src/gatsby-theme-blog/components/post-footer.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-hero-caption.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-hero.js","webpack:///./src/components/post-nav.js","webpack:///./src/gatsby-theme-blog/components/post.js","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/post.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/post-query.js"],"names":["MDXRenderer","require","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","o","p","setPrototypeOf","__proto__","len","length","i","arr2","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","key","fn","minLen","n","prototype","toString","call","slice","constructor","name","test","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","Comments","commentBox","h2","css","mb","ref","className","PostTitle","h1","PostDate","sx","fontSize","mt","Footer","previous","next","hr","PostHeroCaption","text","url","margin","fontStyle","href","target","PostHero","post","image","childImageSharp","fluid","alt","imageAlt","excerpt","imageCaptionText","imageCaptionLink","Nav","as","flexWrap","justifyContent","listStyle","px","py","Link","to","slug","rel","title","Post","data","site","siteMetadata","location","createRef","useEffect","scriptEl","document","createElement","async","src","setAttribute","current","node","firstChild","removeChild","lastChild","appendChild","console","log","description","imageSource","socialImage","date","body","PostWrapper","blogPost","PostPage"],"mappings":"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","file":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js-54da6afa203fb26fe3d9.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import React from 'react';\nimport { css, Styled } from \"theme-ui\"\n\nconst Comments = ({commentBox}) => (\n    <div>\n        <Styled.h2\n            css={css({\n                mb: 0,\n            })}\n        >Comments</Styled.h2>\n        <div ref={commentBox} className=\"comments\"></div>\n    </div>\n)\nexport default Comments","import React from \"react\"\nimport { Styled } from \"theme-ui\"\n\nconst PostTitle = (props) => <Styled.h1 {...props} />\n\nexport default PostTitle\n","/** @jsx jsx */\nimport { Styled, jsx } from \"theme-ui\"\n\nconst PostDate = (props) => (\n  <Styled.p\n    sx={{\n      fontSize: 1,\n      mt: -3,\n      mb: 3,\n    }}\n    {...props}\n  />\n)\n\nexport default PostDate\n","import React from \"react\"\nimport { Styled } from \"theme-ui\"\n\nimport Bio from \"gatsby-theme-blog/src/components/bio\"\n\n/* eslint-disable react/jsx-pascal-case */\nconst Footer = ({ previous, next }) => (\n  <footer>\n    <Styled.hr />\n    <Bio />\n  </footer>\n)\n/* eslint-enable react/jsx-pascal-case */\n\nexport default Footer\n","import React from \"react\"\nimport { Styled, css, Flex } from \"theme-ui\"\n\nconst PostHeroCaption = ({ text, url }) => (\n  <>\n    {text && (\n      <Flex>\n        {url ? (\n          <Styled.a\n            css={css({ margin: `auto`, fontStyle: `italic` })}\n            href={url}\n            target=\"_blank\"\n          >\n            {text}\n          </Styled.a>\n        ) : (\n          <Styled.i css={css({ margin: `auto` })}>{text}</Styled.i>\n        )}\n      </Flex>\n    )}\n  </>\n)\n\nexport default PostHeroCaption\n","import React from \"react\"\nimport Image from \"gatsby-image\"\n\nimport PostHeroCaption from \"./post-hero-caption\"\n\nconst PostHero = ({ post }) => (\n  <>\n    {post?.image?.childImageSharp && (\n      <>\n        <Image\n          fluid={post.image.childImageSharp.fluid}\n          alt={post.imageAlt ? post.imageAlt : post.excerpt}\n        />\n        <PostHeroCaption\n          text={post.imageCaptionText}\n          url={post.imageCaptionLink}\n        />\n      </>\n    )}\n  </>\n)\n\nexport default PostHero\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { css, Styled, Flex } from \"theme-ui\"\n\n/* eslint-disable react/jsx-pascal-case */\nconst Nav = ({ previous, next }) => (\n  <div>\n    <Styled.hr />\n    {(previous || next) && (\n      <Flex\n        as=\"ul\"\n        css={css({\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          px: 0,\n          py: 2,\n        })}\n      >\n        <li>\n          {previous && (\n            <Styled.a as={Link} to={previous.slug} rel=\"prev\">\n              ← {previous.title}\n            </Styled.a>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Styled.a as={Link} to={next.slug} rel=\"next\">\n              {next.title} →\n            </Styled.a>\n          )}\n        </li>\n      </Flex>\n    )}\n    <Styled.hr />\n  </div>\n)\n/* eslint-enable react/jsx-pascal-case */\n\nexport default Nav\n","import React, { createRef, useEffect } from \"react\"\n\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport Comments from \"../../components/comments\"\nimport Layout from \"gatsby-theme-blog/src/components/layout\"\nimport SEO from \"gatsby-theme-blog/src/components/seo\"\nimport PostTitle from \"gatsby-theme-blog/src/components/post-title\"\nimport PostDate from \"gatsby-theme-blog/src/components/post-date\"\nimport PostFooter from \"gatsby-theme-blog/src/components/post-footer\"\nimport PostHero from \"gatsby-theme-blog/src/components/post-hero\"\nimport PostNav from \"../../components/post-nav\"\n\n/* eslint-disable react/jsx-pascal-case */\nconst Post = ({\n  data: {\n    post,\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  location,\n  previous,\n  next,\n}) => {\n  // Comment code adapted from https://dev.to/creativcoder/how-to-add-comment-support-on-your-gatsby-blog-using-github-utterances-423n\n  const commentBox = createRef()\n\n  useEffect(() => {\n    const scriptEl = document.createElement('script')\n    scriptEl.async = true\n    scriptEl.src = 'https://utteranc.es/client.js'\n    scriptEl.setAttribute('repo', 'ozbe/ozbe.github.io')\n    scriptEl.setAttribute('issue-term', 'title')\n    scriptEl.setAttribute('id', 'blog-comment')\n    scriptEl.setAttribute('theme', 'github-light')\n    scriptEl.setAttribute('crossorigin', 'anonymous')\n    if (commentBox && commentBox.current) {\n      const node = commentBox.current\n\n      // Remove previous utterances comments\n      while (node.firstChild) {\n        node.removeChild(node.lastChild)\n      }\n      \n      node.appendChild(scriptEl, scriptEl)\n    } else {\n      console.log(`Error adding utterances comments on: ${commentBox}`)\n    }\n  }, [commentBox])\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO\n        title={post.title}\n        description={post.excerpt}\n        imageSource={\n          post.socialImage\n            ? post.socialImage?.childImageSharp?.fluid.src\n            : post.image?.childImageSharp?.fluid.src\n        }\n        imageAlt={post.imageAlt}\n      />\n      <main>\n        <article>\n          <header>\n            <PostHero post={post} />\n            <PostTitle>{post.title}</PostTitle>\n            <PostDate>{post.date}</PostDate>\n          </header>\n          <section>\n            <MDXRenderer>{post.body}</MDXRenderer>\n          </section>\n          <footer>\n            <PostNav {...{ previous, next }} />\n            <Comments commentBox={commentBox}></Comments>\n          </footer>\n        </article>\n      </main>\n      <PostFooter />\n    </Layout>\n  )\n}\n/* eslint-enable react/jsx-pascal-case */\n\nexport default Post\n","import React from \"react\"\nimport Post from \"../../components/post\"\n\nconst PostWrapper = ({ location, data }) => {\n  const { blogPost, previous, next } = data\n\n  return (\n    <Post\n      data={{ ...data, post: blogPost }}\n      location={location}\n      previous={previous}\n      next={next}\n    />\n  )\n}\n\nexport default PostWrapper\n","import { graphql } from \"gatsby\"\nimport PostPage from \"../components/post\"\n\nexport default PostPage\n\nexport const query = graphql`\n  query PostPageQuery(\n    $id: String!\n    $previousId: String\n    $nextId: String\n    $maxWidth: Int\n  ) {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    blogPost(id: { eq: $id }) {\n      id\n      excerpt\n      body\n      slug\n      title\n      tags\n      date(formatString: \"MMMM DD, YYYY\")\n      image {\n        childImageSharp {\n          fluid(maxWidth: $maxWidth) {\n            ...GatsbyImageSharpFluid\n            src\n          }\n        }\n      }\n      imageAlt\n      imageCaptionText\n      imageCaptionLink\n      socialImage {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n            src\n          }\n        }\n      }\n    }\n    previous: blogPost(id: { eq: $previousId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n    next: blogPost(id: { eq: $nextId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n  }\n`\n"],"sourceRoot":""}